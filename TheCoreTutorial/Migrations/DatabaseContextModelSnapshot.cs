// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheCoreTutorial.Models.DBHandler;

namespace TheCoreTutorial.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    partial class DatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TheCoreTutorial.Models.AuthorNews", b =>
                {
                    b.Property<int>("NewsID")
                        .HasColumnType("int");

                    b.Property<int>("AuthorID")
                        .HasColumnType("int");

                    b.Property<int?>("AuthorsAuthorID")
                        .HasColumnType("int");

                    b.HasKey("NewsID", "AuthorID");

                    b.HasIndex("AuthorsAuthorID");

                    b.ToTable("AuthorNew");

                    b.HasData(
                        new
                        {
                            NewsID = 1,
                            AuthorID = 1
                        },
                        new
                        {
                            NewsID = 2,
                            AuthorID = 2
                        },
                        new
                        {
                            NewsID = 3,
                            AuthorID = 3
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.Authors", b =>
                {
                    b.Property<int>("AuthorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AuthorPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AuthorUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AuthorID");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorID = 1,
                            AuthorEmail = "Zoey.Whitehouse@microsoft.org",
                            AuthorPassword = "oictuhr8",
                            AuthorUsername = "EllieMellor"
                        },
                        new
                        {
                            AuthorID = 2,
                            AuthorEmail = "S.Thorne@baidu.info",
                            AuthorPassword = "nh4qcqau",
                            AuthorUsername = "MiaJoyce"
                        },
                        new
                        {
                            AuthorID = 3,
                            AuthorEmail = "R.Walker@paypal.org",
                            AuthorPassword = "gpny4f09",
                            AuthorUsername = "BentleyLindsay"
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.Categories", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryDescription = "Phasellus non ante non lectus ullamcorper faucibus id a eros.",
                            CategoryName = "ftwcr6zjt02inzbdgvt6"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryDescription = "Phasellus pharetra leo eu tempor molestie.",
                            CategoryName = "nqrzrk00iz9bg9hqm8e6"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryDescription = "Nunc iaculis metus a tristique adipiscing.",
                            CategoryName = "c4zishb42my9o65o37wu"
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.CommentNew", b =>
                {
                    b.Property<int>("NewsID")
                        .HasColumnType("int");

                    b.Property<int>("CommentID")
                        .HasColumnType("int");

                    b.Property<int?>("CommentsCommentID")
                        .HasColumnType("int");

                    b.HasKey("NewsID", "CommentID");

                    b.HasIndex("CommentsCommentID");

                    b.ToTable("CommentNews");

                    b.HasData(
                        new
                        {
                            NewsID = 1,
                            CommentID = 1
                        },
                        new
                        {
                            NewsID = 2,
                            CommentID = 2
                        },
                        new
                        {
                            NewsID = 3,
                            CommentID = 3
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.Comments", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentBody")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentID");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentID = 1,
                            CommentBody = "Vivamus et felis ut augue laoreet mollis."
                        },
                        new
                        {
                            CommentID = 2,
                            CommentBody = "Nullam consectetur enim in sem varius gravida."
                        },
                        new
                        {
                            CommentID = 3,
                            CommentBody = "Curabitur sed lorem a dui consequat congue."
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.Config", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Keywords")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("RecordsPerPage")
                        .HasColumnType("int");

                    b.Property<string>("WebSiteAddress")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.ToTable("Config");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "lorem ipsum",
                            Keywords = "keyword,keyword2",
                            RecordsPerPage = 10,
                            WebSiteAddress = "http://localhost"
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.News", b =>
                {
                    b.Property<int>("NewsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NewsBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("NewsTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("NewsViewCount")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.HasKey("NewsID");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            NewsID = 1,
                            ImageURL = "theguardian.co.uk",
                            IsActive = true,
                            NewsBody = "Nunc ac sem quis augue pharetra volutpat.",
                            NewsTitle = "Nullam quis turpis eu urna vehicula ornare vel et enim.",
                            NewsViewCount = 4,
                            PublishDate = new DateTime(1976, 12, 8, 12, 0, 5, 533, DateTimeKind.Unspecified).AddTicks(7107)
                        },
                        new
                        {
                            NewsID = 2,
                            ImageURL = "163.net",
                            IsActive = true,
                            NewsBody = "Nulla malesuada massa eget nunc accumsan placerat.",
                            NewsTitle = "Nunc iaculis metus a tristique adipiscing.",
                            NewsViewCount = 8,
                            PublishDate = new DateTime(2018, 6, 21, 13, 10, 45, 601, DateTimeKind.Unspecified).AddTicks(7570)
                        },
                        new
                        {
                            NewsID = 3,
                            ImageURL = "ask.org.uk",
                            IsActive = true,
                            NewsBody = "Suspendisse laoreet ligula ac dolor egestas gravida.",
                            NewsTitle = "Phasellus non ante non lectus ullamcorper faucibus id a eros.",
                            NewsViewCount = 1,
                            PublishDate = new DateTime(1986, 4, 25, 3, 34, 35, 587, DateTimeKind.Unspecified).AddTicks(952)
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.NewsCategory", b =>
                {
                    b.Property<int>("NewsID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriesCategoryID")
                        .HasColumnType("int");

                    b.HasKey("NewsID", "CategoryID");

                    b.HasIndex("CategoriesCategoryID");

                    b.ToTable("NewsCategories");

                    b.HasData(
                        new
                        {
                            NewsID = 1,
                            CategoryID = 1
                        },
                        new
                        {
                            NewsID = 2,
                            CategoryID = 2
                        },
                        new
                        {
                            NewsID = 3,
                            CategoryID = 3
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.Tags", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagID");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagID = 1,
                            Tag = "veutemoo"
                        },
                        new
                        {
                            TagID = 2,
                            Tag = "fzmkmxko"
                        },
                        new
                        {
                            TagID = 3,
                            Tag = "osbnmekp"
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.TagsNews", b =>
                {
                    b.Property<int>("NewsID")
                        .HasColumnType("int");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.Property<int?>("TagsTagID")
                        .HasColumnType("int");

                    b.HasKey("NewsID", "TagID");

                    b.HasIndex("TagsTagID");

                    b.ToTable("TagNews");

                    b.HasData(
                        new
                        {
                            NewsID = 1,
                            TagID = 1
                        },
                        new
                        {
                            NewsID = 2,
                            TagID = 2
                        },
                        new
                        {
                            NewsID = 3,
                            TagID = 3
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.AuthorNews", b =>
                {
                    b.HasOne("TheCoreTutorial.Models.Authors", "Authors")
                        .WithMany("AuthorNew")
                        .HasForeignKey("AuthorsAuthorID");

                    b.HasOne("TheCoreTutorial.Models.News", "News")
                        .WithMany("AuthorNew")
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheCoreTutorial.Models.CommentNew", b =>
                {
                    b.HasOne("TheCoreTutorial.Models.Comments", "Comments")
                        .WithMany("CommentNews")
                        .HasForeignKey("CommentsCommentID");

                    b.HasOne("TheCoreTutorial.Models.News", "News")
                        .WithMany("CommentNews")
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheCoreTutorial.Models.NewsCategory", b =>
                {
                    b.HasOne("TheCoreTutorial.Models.Categories", "Categories")
                        .WithMany("NewsCategories")
                        .HasForeignKey("CategoriesCategoryID");

                    b.HasOne("TheCoreTutorial.Models.News", "News")
                        .WithMany("NewsCategories")
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheCoreTutorial.Models.TagsNews", b =>
                {
                    b.HasOne("TheCoreTutorial.Models.News", "News")
                        .WithMany("TagNews")
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheCoreTutorial.Models.Tags", "Tags")
                        .WithMany("TagNews")
                        .HasForeignKey("TagsTagID");
                });
#pragma warning restore 612, 618
        }
    }
}
