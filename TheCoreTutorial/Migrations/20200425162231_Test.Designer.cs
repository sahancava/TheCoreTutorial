// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TheCoreTutorial.Models.DBHandler;

namespace TheCoreTutorial.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200425162231_Test")]
    partial class Test
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TheCoreTutorial.Models.AuthorNews", b =>
                {
                    b.Property<int>("NewsID")
                        .HasColumnType("int");

                    b.Property<int>("AuthorID")
                        .HasColumnType("int");

                    b.Property<int?>("AuthorsAuthorID")
                        .HasColumnType("int");

                    b.HasKey("NewsID", "AuthorID");

                    b.HasIndex("AuthorsAuthorID");

                    b.ToTable("AuthorNew");

                    b.HasData(
                        new
                        {
                            NewsID = 1,
                            AuthorID = 1
                        },
                        new
                        {
                            NewsID = 2,
                            AuthorID = 2
                        },
                        new
                        {
                            NewsID = 3,
                            AuthorID = 3
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.Authors", b =>
                {
                    b.Property<int>("AuthorID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AuthorEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AuthorPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("AuthorUsername")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("AuthorID");

                    b.ToTable("Authors");

                    b.HasData(
                        new
                        {
                            AuthorID = 1,
                            AuthorEmail = "Hailey.Adam@taobao.co.uk",
                            AuthorPassword = "t166hmg3",
                            AuthorUsername = "LeahKenny"
                        },
                        new
                        {
                            AuthorID = 2,
                            AuthorEmail = "A.Sanders@amazon.co.uk",
                            AuthorPassword = "4ffpr6m7",
                            AuthorUsername = "BellaGreen"
                        },
                        new
                        {
                            AuthorID = 3,
                            AuthorEmail = "Liam.Mclean@bbc.org.uk",
                            AuthorPassword = "qo9ksupk",
                            AuthorUsername = "LeahAkhtar"
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.Categories", b =>
                {
                    b.Property<int>("CategoryID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CategoryID");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryID = 1,
                            CategoryDescription = "Nunc iaculis metus a tristique adipiscing.",
                            CategoryName = "yrxiy77cbfzwej04s2kb"
                        },
                        new
                        {
                            CategoryID = 2,
                            CategoryDescription = "Pellentesque commodo risus vitae orci pretium tincidunt.",
                            CategoryName = "hy0rgtjvvov1m9z6xp9u"
                        },
                        new
                        {
                            CategoryID = 3,
                            CategoryDescription = "Fusce scelerisque sapien ornare neque pharetra aliquam.",
                            CategoryName = "78nhsi6pcemutox4iskr"
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.CommentNew", b =>
                {
                    b.Property<int>("NewsID")
                        .HasColumnType("int");

                    b.Property<int>("CommentID")
                        .HasColumnType("int");

                    b.Property<int?>("CommentsCommentID")
                        .HasColumnType("int");

                    b.HasKey("NewsID", "CommentID");

                    b.HasIndex("CommentsCommentID");

                    b.ToTable("CommentNews");

                    b.HasData(
                        new
                        {
                            NewsID = 1,
                            CommentID = 1
                        },
                        new
                        {
                            NewsID = 2,
                            CommentID = 2
                        },
                        new
                        {
                            NewsID = 3,
                            CommentID = 3
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.Comments", b =>
                {
                    b.Property<int>("CommentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentBody")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CommentID");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            CommentID = 1,
                            CommentBody = "Vivamus scelerisque felis sed nisl feugiat, mattis consequat lacus pulvinar."
                        },
                        new
                        {
                            CommentID = 2,
                            CommentBody = "Integer eu neque at lectus imperdiet tincidunt."
                        },
                        new
                        {
                            CommentID = 3,
                            CommentBody = "In laoreet justo et condimentum bibendum."
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.Config", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<string>("Keywords")
                        .HasColumnType("nvarchar(500)")
                        .HasMaxLength(500);

                    b.Property<int>("RecordsPerPage")
                        .HasColumnType("int");

                    b.Property<string>("WebSiteAddress")
                        .HasColumnType("nvarchar(200)")
                        .HasMaxLength(200);

                    b.HasKey("ID");

                    b.ToTable("Config");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Description = "lorem ipsum",
                            Keywords = "keyword,keyword2",
                            RecordsPerPage = 10,
                            WebSiteAddress = "http://localhost"
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.News", b =>
                {
                    b.Property<int>("NewsID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("NewsBody")
                        .IsRequired()
                        .HasColumnType("nvarchar(4000)")
                        .HasMaxLength(4000);

                    b.Property<string>("NewsTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(150)")
                        .HasMaxLength(150);

                    b.Property<int?>("NewsViewCount")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<DateTime>("PublishDate")
                        .HasColumnType("datetime2");

                    b.HasKey("NewsID");

                    b.ToTable("News");

                    b.HasData(
                        new
                        {
                            NewsID = 1,
                            ImageURL = "theguardian.co",
                            IsActive = true,
                            NewsBody = "Morbi sit amet libero vitae augue porttitor tempus.",
                            NewsTitle = "Nunc ac sem quis augue pharetra volutpat.",
                            NewsViewCount = 2,
                            PublishDate = new DateTime(1986, 12, 5, 15, 57, 37, 474, DateTimeKind.Unspecified).AddTicks(5647)
                        },
                        new
                        {
                            NewsID = 2,
                            ImageURL = "yahoo.info",
                            IsActive = true,
                            NewsBody = "Donec dignissim massa nec urna porttitor facilisis.",
                            NewsTitle = "Donec interdum velit a orci consectetur, non mollis diam hendrerit.",
                            NewsViewCount = 8,
                            PublishDate = new DateTime(1990, 12, 15, 9, 55, 40, 941, DateTimeKind.Unspecified).AddTicks(2020)
                        },
                        new
                        {
                            NewsID = 3,
                            ImageURL = "stackoverflow.com",
                            IsActive = true,
                            NewsBody = "Curabitur imperdiet dolor eget volutpat ultrices.",
                            NewsTitle = "Nulla a ligula laoreet, viverra purus vel, suscipit enim.",
                            NewsViewCount = 7,
                            PublishDate = new DateTime(1979, 11, 10, 6, 24, 6, 495, DateTimeKind.Unspecified).AddTicks(8641)
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.NewsCategory", b =>
                {
                    b.Property<int>("NewsID")
                        .HasColumnType("int");

                    b.Property<int>("CategoryID")
                        .HasColumnType("int");

                    b.Property<int?>("CategoriesCategoryID")
                        .HasColumnType("int");

                    b.HasKey("NewsID", "CategoryID");

                    b.HasIndex("CategoriesCategoryID");

                    b.ToTable("NewsCategories");

                    b.HasData(
                        new
                        {
                            NewsID = 1,
                            CategoryID = 1
                        },
                        new
                        {
                            NewsID = 2,
                            CategoryID = 2
                        },
                        new
                        {
                            NewsID = 3,
                            CategoryID = 3
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.Tags", b =>
                {
                    b.Property<int>("TagID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Tag")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TagID");

                    b.ToTable("Tags");

                    b.HasData(
                        new
                        {
                            TagID = 1,
                            Tag = "amsjiism"
                        },
                        new
                        {
                            TagID = 2,
                            Tag = "mfggcemg"
                        },
                        new
                        {
                            TagID = 3,
                            Tag = "fhsjosuy"
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.TagsNews", b =>
                {
                    b.Property<int>("NewsID")
                        .HasColumnType("int");

                    b.Property<int>("TagID")
                        .HasColumnType("int");

                    b.Property<int?>("TagsTagID")
                        .HasColumnType("int");

                    b.HasKey("NewsID", "TagID");

                    b.HasIndex("TagsTagID");

                    b.ToTable("TagNews");

                    b.HasData(
                        new
                        {
                            NewsID = 1,
                            TagID = 1
                        },
                        new
                        {
                            NewsID = 2,
                            TagID = 2
                        },
                        new
                        {
                            NewsID = 3,
                            TagID = 3
                        });
                });

            modelBuilder.Entity("TheCoreTutorial.Models.AuthorNews", b =>
                {
                    b.HasOne("TheCoreTutorial.Models.Authors", "Authors")
                        .WithMany("AuthorNew")
                        .HasForeignKey("AuthorsAuthorID");

                    b.HasOne("TheCoreTutorial.Models.News", "News")
                        .WithMany("AuthorNew")
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheCoreTutorial.Models.CommentNew", b =>
                {
                    b.HasOne("TheCoreTutorial.Models.Comments", "Comments")
                        .WithMany("CommentNews")
                        .HasForeignKey("CommentsCommentID");

                    b.HasOne("TheCoreTutorial.Models.News", "News")
                        .WithMany("CommentNews")
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheCoreTutorial.Models.NewsCategory", b =>
                {
                    b.HasOne("TheCoreTutorial.Models.Categories", "Categories")
                        .WithMany("NewsCategories")
                        .HasForeignKey("CategoriesCategoryID");

                    b.HasOne("TheCoreTutorial.Models.News", "News")
                        .WithMany("NewsCategories")
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TheCoreTutorial.Models.TagsNews", b =>
                {
                    b.HasOne("TheCoreTutorial.Models.News", "News")
                        .WithMany("TagNews")
                        .HasForeignKey("NewsID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TheCoreTutorial.Models.Tags", "Tags")
                        .WithMany("TagNews")
                        .HasForeignKey("TagsTagID");
                });
#pragma warning restore 612, 618
        }
    }
}
